<!-- build_xlib.xml

Description:
	This ANT script constructs <project root>/xlib.

	To use this script, you must update properties is <project root>/scripts/build.properties or overide 
	them from commandline (using -D option). For example:
		
		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -f scripts/build_xlib.xml
		
	or
		
		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% 
		ant -f scripts/build_xlib.xml -v	
-->

<project name="build_xlib" default="all" basedir=".">

	<!-- Debug 
	<echoproperties />
	<fail message="INFO: Debug" />
	-->

	<!-- Property files -->
	<property file="${basedir}/build.properties" />

	<!-- Global properties -->
	<property name="xlib_dir" location="${nlbuildroot}/xlib" />
	<property name="xlib_jar_dir" value="${xlib_dir}/jar" />
	<property name="java_sdk_dir" location="${xlib_jar_dir}/sapjavasdk/jservice" />

	<property name="libdir" location="${nlbuildroot}/lib" />

	<!-- Dump properties -->
	<echoproperties />

	<echo message="INFO: Dump properties completed" />

	<!-- Sanity checks -->
	<fail message="nlbuildroot is not set" unless="nlbuildroot" />
	<fail message="nlbuildroot is empty">
		<condition>
			<equals arg1="${nlbuildroot}" arg2="" trim="true" />
		</condition>
	</fail>
	<available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />
	<fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />

	<fail message="nlexternaldir is not set" unless="nlexternaldir" />
	<fail message="nlexternaldir is empty">
		<condition>
			<equals arg1="${nlexternaldir}" arg2="" trim="true" />
		</condition>
	</fail>
	<available file="${nlexternaldir}" type="dir" property="local.nlexternaldir_exists" />
	<fail message="nlexternaldir directory does not exist - ${nlexternaldir}" unless="local.nlexternaldir_exists" />

	<fail message="xlib_destiny_build_artifacts_zip_file is not set" unless="xlib_destiny_build_artifacts_zip_file" />
	<fail message="xlib_destiny_build_artifacts_zip_file is empty">
		<condition>
			<equals arg1="${xlib_destiny_build_artifacts_zip_file}" arg2="" trim="true" />
		</condition>
	</fail>
	<available file="${xlib_destiny_build_artifacts_zip_file}" type="file" property="local.sdk_zip_file_exists" />
	<fail message="xlib_destiny_build_artifacts_zip_file directory does not exist - ${xlib_destiny_build_artifacts_zip_file}" unless="local.sdk_zip_file_exists" />

	<echo message="INFO: Sanity check completed (no error)" />

	<!-- Targets -->
	<target name="all" depends="clean, copy_external_jars, unpack_destiny_jars" />

	<target name="copy_external_jars">
		<mkdir dir="${xlib_jar_dir}" />

		<copy file="${nlexternaldir}/commons-discovery/commons-discovery-0.2/commons-discovery.jar" tofile="${xlib_jar_dir}/commons-discovery-0.2.jar" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/commons-logging/commons-logging-1.0.4/commons-logging.jar" tofile="${xlib_jar_dir}/commons-logging-1.0.4.jar" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/jaf/jaf-1.1.1/activation.jar" tofile="${xlib_jar_dir}/activation-1.1.1.jar" preservelastmodified="true" overwrite="false" verbose="true" />

		<copy file="${nlexternaldir}/axis/axis-1_2/lib/jaxrpc.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/axis/axis-1_2/lib/wsdl4j-1.5.1.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/axis/axis-1_4/lib/axis.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/commons-codec/commons-codec-1.2/commons-codec-1.2.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/commons-httpclient/commons-httpclient-3.0.1/commons-httpclient-3.0.1.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/commons-io/commons-io-2.3/commons-io-2.3.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/commons-ssl/unknownversion/commons-ssl.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/guava/guava-15.0/guava-15.0.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/hamcrest-1.3/hamcrest-core-1.3.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/hpvoltage/unknownversion/vibesimplejava.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/hpvoltage/unknownversion/vssoaclient_v55.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/jilter/jilter-1.2/jilter-1.2.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/junit/junit4.11/junit-4.11.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/mail/mail-1.4/mail-1.4.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/mysql-connector-java/mysql-connector-java-5.0.8/mysql-connector-java-5.0.8-bin.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
		<copy file="${nlexternaldir}/mysql-connector-java/mysql-connector-java-5.1.26/mysql-connector-java-5.1.26-bin.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />

		<copy todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true">
			<fileset dir="${nlexternaldir}/sapjco/3.0.11">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<copy file="${xlib_jar_dir}/NTamd64/sapjco3.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />
	</target>

	<target name="unpack_destiny_jars">
		<mkdir dir="${libdir}" />

		<unzip src="${xlib_destiny_build_artifacts_zip_file}" dest="${libdir}" overwrite="yes">
			<patternset>
				<include name="agent/lib/agent-controlmanager.jar" />
				<include name="agent/lib/common-framework.jar" />
				<include name="agent/lib/common-pf.jar" />
				<include name="agent/lib/crypt.jar" />
			</patternset>
			<mapper type="flatten" />
		</unzip>

		<move file="${libdir}/agent-controlmanager.jar" todir="${libdir}" preservelastmodified="true" overwrite="false" />
		<move file="${libdir}/common-framework.jar" todir="${libdir}" preservelastmodified="true" overwrite="false" />
		<move file="${libdir}/common-pf.jar" todir="${libdir}" preservelastmodified="true" overwrite="false" />
		<move file="${libdir}/crypt.jar" todir="${libdir}" preservelastmodified="true" overwrite="false" />
	</target>

	<target name="clean">
		<delete dir="${xlib_dir}" />
	</target>
</project>

